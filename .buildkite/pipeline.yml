agents:
  queue: new-central
  slurm_mem: 8G
  modules: julia/1.10.1 cuda/12.2 ucx/1.14.1_cuda-12.2 openmpi/4.1.5_cuda-12.2 hdf5/1.12.2-ompi415 nsight-systems/2023.2.1

env:
  JULIA_LOAD_PATH: "${JULIA_LOAD_PATH}:${BUILDKITE_BUILD_CHECKOUT_PATH}/.buildkite"
  JULIA_CPU_TARGET: 'broadwell;skylake'
  OPENBLAS_NUM_THREADS: 1
  JULIA_NVTX_CALLBACKS: gc
  DATADEPS_ALWAYS_ACCEPT: true

steps:
  - label: "initialize"
    key: "init_all_env"
    command:
      - echo "--- Instantiate project"

      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project -e 'using Pkg; Pkg.precompile(;strict=true)'"
      # force the initialization of the CUDA runtime as it is lazily loaded by default
      - "julia --project -e 'using CUDA; CUDA.precompile_runtime()'"
      
      - echo "--- Instantiate status"
      - "julia --project -e 'using Pkg; Pkg.status()'"

      - echo "--- Instantiate examples"
      - "julia --project=examples -e 'using Pkg; Pkg.develop(path=\".\")'"
      - "julia --project=examples -e 'using Pkg; Pkg.instantiate(;verbose=true); Pkg.precompile(;strict=true)'"
      - "julia --project=examples --check-bounds=yes -e 'using Pkg; Pkg.instantiate(;verbose=true); Pkg.precompile(;strict=true)'"

      - echo "--- Instantiate test"
      - "julia --project=test -e 'using Pkg; Pkg.develop(path=\".\"); Pkg.instantiate(;verbose=true); Pkg.precompile(;strict=true)'"
      - "julia --project=test --check-bounds=yes -e 'using Pkg; Pkg.instantiate(;verbose=true); Pkg.precompile(;strict=true)'"


    agents:
      slurm_mem: 16G
      slurm_gpus: 1
      slurm_ntasks: 1
      slurm_cpus_per_task: 8
    env:
      JULIA_NUM_PRECOMPILE_TASKS: 8

  - wait
  
  - label: ":computer: unit tests"
    key: "cpu_unittests"
    command:
      - "julia --color=yes --check-bounds=yes --project test/runtests.jl"

  - label: ":flower_playing_cards: unit tests"
    key: "gpu_unittests"
    command:
      - "julia --project -e 'using CUDA; CUDA.versioninfo()'"
      - "julia --color=yes --check-bounds=yes --project test/runtests.jl CUDA"
    agents:
      slurm_gpus: 1

  - label: ":flower_playing_cards: MNIST"
    key: "gpu_mnist"
    command:
      - "julia --project=examples -e 'using CUDA; CUDA.versioninfo()'"
      - "julia --color=yes --check-bounds=yes --project=examples examples/mnist/training.jl examples/mnist/Experiment.toml CUDA"
    artifact_paths: "examples/mnist/output/*png"
    agents:
      slurm_gpus: 1
